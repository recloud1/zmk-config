/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors/mouse_move.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 40
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1400

&lt { quick_tap_ms = <200>; };

&mt {
    quick-tap-ms = <125>;
    tapping-term-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        sleep {
            bindings = <&kp K_SLEEP>;
            key-positions = <0 11>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <12 23>;
        };

        equal {
            bindings = <&equal>;
            key-positions = <19 16>;
        };

        plus {
            bindings = <&plus>;
            key-positions = <19 17>;
        };

        minus {
            bindings = <&minus>;
            key-positions = <19 15>;
        };

        lpar {
            bindings = <&kp LPAR>;
            key-positions = <19 20>;
        };

        rpar {
            bindings = <&kp RPAR>;
            key-positions = <20 21>;
        };

        change_language {
            bindings = <&kp CAPSLOCK>;
            key-positions = <41 38>;
        };

        plus_symbol {
            bindings = <&kp KP_PLUS>;
            key-positions = <19 7>;
        };

        minus_symbol {
            bindings = <&kp MINUS>;
            key-positions = <19 31>;
        };

        bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <32 31>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
        };

        equal_sign {
            bindings = <&kp KP_EQUAL>;
            key-positions = <16 15>;
        };

        copy {
            bindings = <&copy>;
            key-positions = <26 27>;
        };

        paste {
            bindings = <&paste>;
            key-positions = <27 28>;
        };

        cut {
            bindings = <&cut>;
            key-positions = <28 26>;
        };

        under {
            bindings = <&kp UNDERSCORE>;
            key-positions = <28 16>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <18 6>;
        };
    };

    macros {
        right_arrow: right_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT &kp SPACE>;
            label = "RIGHT_ARROW";
        };

        equal: equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp KP_EQUAL &kp SPACE>;
            label = "EQUAL";
        };

        increment: increment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp KP_PLUS &kp KP_EQUAL &kp SPACE>;
            label = "INCREMENT";
        };

        plus: plus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp KP_PLUS &kp SPACE>;
            label = "PLUS";
        };

        minus: minus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp KP_MINUS &kp SPACE>;
            label = "MINUS";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCMD>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCMD>;

            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCMD>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCMD>;

            label = "PASTE";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCMD>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LCMD>;

            label = "CUT";
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &none   &kp Q                &kp W            &kp E            &kp R              &kp T        &kp Y         &kp U               &kp I             &kp O             &kp P                    &kp LEFT_BRACKET
  &none   &hmr LEFT_CONTROL A  &hmr LEFT_ALT S  &hmr LEFT_GUI D  &hmr LEFT_SHIFT F  &kp G        &kp H         &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL SEMI  &kp DOUBLE_QUOTES
  &trans  &kp Z                &kp X            &kp C            &kp V              &kp B        &kp N         &kp M               &kp COMMA         &kp DOT           &kp FSLH                 &kp BSLH
                               &tog 1           &lt 3 TAB        &lt 2 SPACE        &lt 1 RET    &lt 0 ESCAPE  &lt 2 RETURN        &lt 3 BACKSPACE   &tog 3
            >;
        };

        mouse_layer {
            bindings = <
  &trans  &trans  &trans  &trans  &trans  &trans    &none     &none           &mmv MOVE_UP    &none            &msc SCRL_UP    &trans
  &trans  &trans  &trans  &trans  &trans  &trans    &none     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &trans
  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &msc SCRL_LEFT  &none           &msc SCRL_RIGHT  &trans          &trans
                  &trans  &trans  &trans  &trans    &mkp MB3  &mkp MB1        &mkp MB2        &trans
            >;
        };

        lower_layer {
            bindings = <
  &kp GRAVE  &kp F1  &kp F2    &kp F3      &kp F5       &none        &kp F6     &kp F7  &kp F8     &kp F9    &kp F10  &none
  &kp EXCL   &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp MINUS    &kp CARET  &none   &kp STAR   &kp AMPS  &none    &none
  &trans     &kp N1  &kp N2    &kp N3      &kp N4       &kp N5       &kp N6     &kp N7  &kp N8     &kp N9    &kp N0   &none
                     &trans    &lt 4 TAB   &trans       &trans       &trans     &trans  &lt 4 DEL  &none
            >;
        };

        raise_layer {
            bindings = <
  &kp KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp PG_UP  &kp SLCK         &kp CAPS
  &kp KP_N0   &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp LEFT      &kp DOWN           &kp UP           &kp RIGHT  &kp INS          &mt RCTRL K_APP
  &trans      &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END            &trans           &kp PG_DN  &kp PAUSE_BREAK  &trans
                               &trans     &trans     &trans     &lt 4 RET       &lt 4 ESC     &trans             &trans           &trans
            >;
        };

        adjust_layer {
            bindings = <
  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                             &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
