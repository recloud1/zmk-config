/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt {
    quick-tap-ms = <125>;
    tapping-term-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        right_arrow {
            bindings = <&right_arrow>;
            key-positions = <12 33>;
        };

        sleep {
            bindings = <&kp K_LOCK>;
            key-positions = <0 11>;
        };
    };

    macros {
        right_arrow: right_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "RIGHT_ARROW";
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        mouse_behaviour: mouse_behaviour {
            compatible = "zmk,behavior-mouse-move";
            label = "MOUSE_BEHAVIOUR";
            #binding-cells = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp LPAR   &kp Q                &kp W            &kp E            &kp R              &kp T        &kp Y         &kp U               &kp I             &kp O             &kp P                    &kp LEFT_BRACKET
  &kp UNDER  &hmr LEFT_CONTROL A  &hmr LEFT_ALT S  &hmr LEFT_GUI D  &hmr LEFT_SHIFT F  &kp G        &kp H         &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL SEMI  &kp APOSTROPHE
  &trans     &kp Z                &kp X            &kp C            &kp V              &kp B        &kp N         &kp M               &kp COMMA         &kp DOT           &kp FSLH                 &kp BSLH
                                  &kp LGUI         &lt 2 TAB        &lt 1 SPACE        &lt 0 RET    &lt 0 ESCAPE  &lt 1 RETURN        &lt 2 BACKSPACE   &trans
            >;
        };

        lower_layer {
            bindings = <
  &kp GRAVE  &kp F1  &kp F2    &kp F3      &kp F5       &kp PLUS     &kp F6     &kp F7     &kp F8     &kp F9             &kp F10   &kp CAPSLOCK
  &kp EXCL   &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp MINUS    &kp CARET  &kp EQUAL  &kp STAR   &kp AMPS           &kp RPAR  &kp RIGHT_BRACKET
  &trans     &kp N1  &kp N2    &kp N3      &kp N4       &kp N5       &kp N6     &kp N7     &kp N8     &kp N9             &kp N0    &kp RIGHT_BRACE
                     &trans    &lt 3 TAB   &trans       &trans       &trans     &trans     &lt 3 DEL  &kp RIGHT_BRACKET
            >;
        };

        raise_layer {
            bindings = <
  &kp KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp PG_UP  &kp SLCK         &kp CAPS
  &kp KP_N0   &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp LEFT      &kp DOWN           &kp UP           &kp RIGHT  &kp INS          &mt RCTRL K_APP
  &trans      &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END            &trans           &kp PG_DN  &kp PAUSE_BREAK  &trans
                               &trans     &trans     &trans     &lt 3 RET       &lt 3 ESC     &trans             &trans           &trans
            >;
        };

        adjust_layer {
            bindings = <
  &bootloader  &none         &none         &none         &none         &none           &none                     &none                       &none         &none         &none         &bootloader
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4              &bt BT_SEL 3                &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &sys_reset   &none         &none         &none         &none         &none           &mmv MOVE_UP  &mmv MOVE_DOWN  &none         &none         &none         &sys_reset
                             &none         &trans        &none         &trans          &trans                    &none                       &trans        &none
            >;
        };
    };
};
